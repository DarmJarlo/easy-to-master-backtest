class Trader:
    def __init__(self):
        self.open = 0
        self.high = 0
        self.low = 0
        self.close = 0
        self.volume = 0
        self.position = 0
        self.stop_loss = 0
        self.volume_sum_30s = 0
        self.timestamp = 0
        self.volume_30s = []

    def update(self, kline):
        self.open = float(kline[1])
        self.high = float(kline[2])
        self.low = float(kline[3])
        self.close = float(kline[4])
        self.volume = float(kline[5])
        if len(self.volume_30s) < 30
            self.volume_30s.append(self.volume)
        elif len(self.volume_30s) == 30:
            self.volume_30s.pop(0)
            self.volume_30s.append(self.volume)

    def write_record(trade_amount):
        with open('trade_log.txt', 'a') as f:
            f.write(f"{self.timestamp}: {trade_amount} @ {price}\n")

    @abstractmethod
    def should_enter(self, kline):
        pass

    @abstractmethod
    def should_exit(self, kline, stop_loss):
        pass

    @abstractmethod
    def set_stop_loss(self, kline):
        pass